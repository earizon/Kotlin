# https://www.infoworld.com/article/3236419/development-tools/kotlin-frameworks-a-survey-of-jvm-development-tools.html#tk.ifw-infsb
  Kotlin Frameworks survey



# https://allegro.tech/2018/05/From-Java-to-Kotlin-and-Back-Again.html

# https://es.slideshare.net/IldarNurgaliev/kotlin-compiler-construction-very-brief


## Kotlin+akka
* https://medium.com/blockchain-engineering/kotlin-akka-part-1-hello-kotlin-a0c0de7d7407

# https://blog.jetbrains.com/kotlin/2018/09/kotlin-1-3-rc-is-here-migrate-your-coroutines
# https://blog.jetbrains.com/kotlin/2017/12/kotlinnative-v0-5-released-calling-kotlin-from-swift-and-c-llvm-5-and-more/
  Kotlin/Native v0.5 released: calling Kotlin from Swift and C, LLVM 5 and more
# https://developers.redhat.com/blog/2018/12/24/using-a-kotlin-based-grpc-api-with-envoy-proxy-for-server-side-load-balancing/

# https://www.infoq.com/articles/kotlin-coroutines-bottom-up
Key Takeaways
- The JVM does not provide native support for coroutines
- Kotlin implements coroutines in the compiler via transformation to a state machine
- Kotlin uses a single keyword for the implementation, the rest is done in libraries
- Kotlin uses Continuation Passing Style (CPS) to implement coroutines
- Coroutines use Dispatchers, so are used slightly differently in JavaFX, Android, Swing, etc

# Google Protocol Buffers Support Idiomatic Kotlin Bindings [[{IO.grpc]]
  https://www.infoq.com/news/2021/12/protocol-buffers-kotlin-dsl/
[[}]]

# org.jetbrains.kotlin artifacts at Maven Central:
  https://search.maven.org/#search%7Cga%7C3%7Corg.jetbrains.kotlin


